// <auto-generated />
using System;
using AMIAApplicant.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AMIAApplicant.Migrations
{
    [DbContext(typeof(ApplicantContext))]
    partial class ApplicantContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AMIAApplicant.Models.AccessoryAgency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessoryAgencyFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccessoryAgencyShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccessoryAgencies");
                });

            modelBuilder.Entity("AMIAApplicant.Models.Applicant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessoryAgencyId")
                        .HasColumnType("int");

                    b.Property<int>("AreaOfMedicalBoardId")
                        .HasColumnType("int");

                    b.Property<string>("ArrivedFromROVD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BenefitId")
                        .HasColumnType("int");

                    b.Property<short>("CategoryOfApplicantId")
                        .HasColumnType("smallint");

                    b.Property<int?>("CategoryOfApplicantId1")
                        .HasColumnType("int");

                    b.Property<bool>("CriminalRecord")
                        .HasColumnType("bit");

                    b.Property<bool>("DAKTO")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfFillingCard")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DocsOriginal")
                        .HasColumnType("bit");

                    b.Property<bool>("Enlisted")
                        .HasColumnType("bit");

                    b.Property<short?>("FacultyId")
                        .HasColumnType("smallint");

                    b.Property<int?>("FacultyId1")
                        .HasColumnType("int");

                    b.Property<string>("FatherInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FiledCertificates")
                        .HasColumnType("bit");

                    b.Property<int>("FirstInSchoolSert")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FocusGroup")
                        .HasColumnType("bit");

                    b.Property<short>("ForeignLanguageId")
                        .HasColumnType("smallint");

                    b.Property<int?>("ForeignLanguageId1")
                        .HasColumnType("int");

                    b.Property<bool>("GUSB")
                        .HasColumnType("bit");

                    b.Property<short>("HealthGroupId")
                        .HasColumnType("smallint");

                    b.Property<int?>("HealthGroupId1")
                        .HasColumnType("int");

                    b.Property<string>("HomeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Ideas100")
                        .HasColumnType("bit");

                    b.Property<int>("InspectorId")
                        .HasColumnType("int");

                    b.Property<short>("KindOfAducationId")
                        .HasColumnType("smallint");

                    b.Property<short>("KindOfDICId")
                        .HasColumnType("smallint");

                    b.Property<int?>("KindOfDICId1")
                        .HasColumnType("int");

                    b.Property<int?>("KindOfEducationId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Lock")
                        .HasColumnType("bit");

                    b.Property<bool>("MOOP")
                        .HasColumnType("bit");

                    b.Property<short>("MaritalStatusId")
                        .HasColumnType("smallint");

                    b.Property<int?>("MaritalStatusId1")
                        .HasColumnType("int");

                    b.Property<int>("MilitaryCommissariatId")
                        .HasColumnType("int");

                    b.Property<string>("MotherInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("PFLId")
                        .HasColumnType("smallint");

                    b.Property<int?>("PFLId1")
                        .HasColumnType("int");

                    b.Property<bool>("PK")
                        .HasColumnType("bit");

                    b.Property<string>("Patronymic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PsychologicalSupportGroup")
                        .HasColumnType("bit");

                    b.Property<int>("RankId")
                        .HasColumnType("int");

                    b.Property<bool>("ReEmployment")
                        .HasColumnType("bit");

                    b.Property<bool>("Reserve")
                        .HasColumnType("bit");

                    b.Property<bool>("RiskGroup")
                        .HasColumnType("bit");

                    b.Property<int>("SchoolCertificateSum")
                        .HasColumnType("int");

                    b.Property<int>("SecondInSchoolSert")
                        .HasColumnType("int");

                    b.Property<int>("SertificateFirst")
                        .HasColumnType("int");

                    b.Property<int>("SertificateSecond")
                        .HasColumnType("int");

                    b.Property<short>("SexId")
                        .HasColumnType("smallint");

                    b.Property<int?>("SexId1")
                        .HasColumnType("int");

                    b.Property<bool>("Sotr")
                        .HasColumnType("bit");

                    b.Property<string>("Specialities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SumOfFirstAndSecond")
                        .HasColumnType("int");

                    b.Property<int>("TypeOfAccessoryAgencyId")
                        .HasColumnType("int");

                    b.Property<string>("WhichSchoolGraduated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearOfSchoolGraduated")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccessoryAgencyId");

                    b.HasIndex("AreaOfMedicalBoardId");

                    b.HasIndex("BenefitId");

                    b.HasIndex("CategoryOfApplicantId1");

                    b.HasIndex("FacultyId1");

                    b.HasIndex("ForeignLanguageId1");

                    b.HasIndex("HealthGroupId1");

                    b.HasIndex("InspectorId");

                    b.HasIndex("KindOfDICId1");

                    b.HasIndex("KindOfEducationId");

                    b.HasIndex("MaritalStatusId1");

                    b.HasIndex("MilitaryCommissariatId");

                    b.HasIndex("PFLId1");

                    b.HasIndex("RankId");

                    b.HasIndex("SexId1");

                    b.HasIndex("TypeOfAccessoryAgencyId");

                    b.ToTable("Applicants");
                });

            modelBuilder.Entity("AMIAApplicant.Models.AreaOfMedicalBoard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaOfMedicalBoardName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AreaOfMedicalBoards");
                });

            modelBuilder.Entity("AMIAApplicant.Models.Benefit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BenefitFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BenefitShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PercentageOfBenefit")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Benefits");
                });

            modelBuilder.Entity("AMIAApplicant.Models.CategoryOfApplicant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryOfApplicantName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryOfApplicants");
                });

            modelBuilder.Entity("AMIAApplicant.Models.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FacultyFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacultyShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("AMIAApplicant.Models.ForeignLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ForeignLanguageFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForeignLanguageShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ForeignLanguages");
                });

            modelBuilder.Entity("AMIAApplicant.Models.HealthGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HealthGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HealthGroups");
                });

            modelBuilder.Entity("AMIAApplicant.Models.Inspector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InspectorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Inspectors");
                });

            modelBuilder.Entity("AMIAApplicant.Models.KindOfDIC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KindOfDICName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KindOfDICs");
                });

            modelBuilder.Entity("AMIAApplicant.Models.KindOfEducation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KindOfAducationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KindOfEducations");
                });

            modelBuilder.Entity("AMIAApplicant.Models.MaritalStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MaritalStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MaritalStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaritalStatusName = "холост"
                        },
                        new
                        {
                            Id = 2,
                            MaritalStatusName = "не замужем"
                        },
                        new
                        {
                            Id = 3,
                            MaritalStatusName = "замужем"
                        },
                        new
                        {
                            Id = 4,
                            MaritalStatusName = "женат"
                        });
                });

            modelBuilder.Entity("AMIAApplicant.Models.MilitaryCommissariat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MilitaryCommissariatArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilitaryCommissariatFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilitaryCommissariatHome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilitaryCommissariatPostIndex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilitaryCommissariatRegion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilitaryCommissariatShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilitaryCommissariatStreet")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MilitaryCommissariats");
                });

            modelBuilder.Entity("AMIAApplicant.Models.PFL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PFLName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PFLs");
                });

            modelBuilder.Entity("AMIAApplicant.Models.Rank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RankFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RankShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ranks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RankFullName = "рядовой милиции",
                            RankShortName = "ряд. мил."
                        },
                        new
                        {
                            Id = 2,
                            RankFullName = "младший сержант милиции",
                            RankShortName = "мл. с-нт мил."
                        },
                        new
                        {
                            Id = 3,
                            RankFullName = "сержант милиции",
                            RankShortName = "с-нт мил."
                        },
                        new
                        {
                            Id = 4,
                            RankFullName = "старший сержант милиции",
                            RankShortName = "ст. с-нт мил."
                        },
                        new
                        {
                            Id = 5,
                            RankFullName = "старшина милиции",
                            RankShortName = "с-на мил."
                        });
                });

            modelBuilder.Entity("AMIAApplicant.Models.Sex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SexFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SexShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sexes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SexFullName = "Мужской",
                            SexShortName = "М"
                        },
                        new
                        {
                            Id = 2,
                            SexFullName = "Женский",
                            SexShortName = "Ж"
                        });
                });

            modelBuilder.Entity("AMIAApplicant.Models.TypeOfAccessoryAgency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeOfAccessoryAgencyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeOfAccessoryAgencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TypeOfAccessoryAgencyName = "ОВД"
                        },
                        new
                        {
                            Id = 2,
                            TypeOfAccessoryAgencyName = "ДФР"
                        },
                        new
                        {
                            Id = 3,
                            TypeOfAccessoryAgencyName = "ГПК"
                        },
                        new
                        {
                            Id = 4,
                            TypeOfAccessoryAgencyName = "МО"
                        });
                });

            modelBuilder.Entity("AMIAApplicant.Models.Applicant", b =>
                {
                    b.HasOne("AMIAApplicant.Models.AccessoryAgency", "AccessoryAgency")
                        .WithMany()
                        .HasForeignKey("AccessoryAgencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AMIAApplicant.Models.AreaOfMedicalBoard", "AreaOfMedicalBoard")
                        .WithMany()
                        .HasForeignKey("AreaOfMedicalBoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AMIAApplicant.Models.Benefit", "Benefit")
                        .WithMany()
                        .HasForeignKey("BenefitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AMIAApplicant.Models.CategoryOfApplicant", "CategoryOfApplicant")
                        .WithMany()
                        .HasForeignKey("CategoryOfApplicantId1");

                    b.HasOne("AMIAApplicant.Models.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyId1");

                    b.HasOne("AMIAApplicant.Models.ForeignLanguage", "ForeignLanguage")
                        .WithMany()
                        .HasForeignKey("ForeignLanguageId1");

                    b.HasOne("AMIAApplicant.Models.HealthGroup", "HealthGroup")
                        .WithMany()
                        .HasForeignKey("HealthGroupId1");

                    b.HasOne("AMIAApplicant.Models.Inspector", "Inspector")
                        .WithMany()
                        .HasForeignKey("InspectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AMIAApplicant.Models.KindOfDIC", "KindOfDIC")
                        .WithMany()
                        .HasForeignKey("KindOfDICId1");

                    b.HasOne("AMIAApplicant.Models.KindOfEducation", "KindOfEducation")
                        .WithMany()
                        .HasForeignKey("KindOfEducationId");

                    b.HasOne("AMIAApplicant.Models.MaritalStatus", "MaritalStatus")
                        .WithMany()
                        .HasForeignKey("MaritalStatusId1");

                    b.HasOne("AMIAApplicant.Models.MilitaryCommissariat", "MilitaryCommissariat")
                        .WithMany()
                        .HasForeignKey("MilitaryCommissariatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AMIAApplicant.Models.PFL", "PFL")
                        .WithMany()
                        .HasForeignKey("PFLId1");

                    b.HasOne("AMIAApplicant.Models.Rank", "Rank")
                        .WithMany()
                        .HasForeignKey("RankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AMIAApplicant.Models.Sex", "Sex")
                        .WithMany()
                        .HasForeignKey("SexId1");

                    b.HasOne("AMIAApplicant.Models.TypeOfAccessoryAgency", "TypeOfAccessoryAgency")
                        .WithMany()
                        .HasForeignKey("TypeOfAccessoryAgencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccessoryAgency");

                    b.Navigation("AreaOfMedicalBoard");

                    b.Navigation("Benefit");

                    b.Navigation("CategoryOfApplicant");

                    b.Navigation("Faculty");

                    b.Navigation("ForeignLanguage");

                    b.Navigation("HealthGroup");

                    b.Navigation("Inspector");

                    b.Navigation("KindOfDIC");

                    b.Navigation("KindOfEducation");

                    b.Navigation("MaritalStatus");

                    b.Navigation("MilitaryCommissariat");

                    b.Navigation("PFL");

                    b.Navigation("Rank");

                    b.Navigation("Sex");

                    b.Navigation("TypeOfAccessoryAgency");
                });
#pragma warning restore 612, 618
        }
    }
}
